@mixin adaptive-value($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;
  @if type==1 {
    #{$property}: $startSize + px;
    @media only screen and (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize}* ((100vw - 320px) / #{$maxWidthContainer -
              320})
      );
    }
  } @else if $type==2 {
    #{$property}: $startSize + px;
    @media only  screen and (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize}* ((100vw - 320px) / #{$maxWidth - 320})
      );
    }
  } @else {
    #{$property}: calc(
      #{$minSize + px} + #{$addSize}* ((100vw - 320px) / #{$maxWidth - 320})
    );
  }
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}
@mixin position(
  $type,
  $propertyTopBottom,
  $TopBottomValue,
  $propertyLeftRight,
  $LeftRightValue
) {
  position: $type;
  #{$propertyTopBottom}: $TopBottomValue;
  #{$propertyLeftRight}: $LeftRightValue;
}
